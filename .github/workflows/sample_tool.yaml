
on:
  issue_comment:
    types: [created]

permissions:
  pull-requests: write
  issues: write
  contents: read

jobs:
  after-checkmarx:
    runs-on: ubuntu-latest
    if: >
      github.event.issue.pull_request &&
      contains(github.event.comment.body, '✅ Checkmarx Scan Completed')
    steps:
      - name: Debug Info
        run: |
          echo "Comment detected on PR #${{ github.event.issue.number }}"
          echo "Comment contains Checkmarx completion message"

      - name: Comment on PR
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ secrets.NCAI_SVRT_TOKEN }}
          issue-number: ${{ github.event.issue.number }}
          body: |
            🛠️ **Vulnerability remediation started** for this PR!
            🔗 **Follow this URL for detailed analysis**: [View Report](https://your-link-here.com/report/${{ github.event.issue.number }})

      - name: Install GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install gh -y

      - name: Fetch PR details
        id: pr
        env:
          GH_TOKEN: ${{ secrets.NCAI_SVRT_TOKEN }}
        run: |
          pr_data=$(gh pr view ${{ github.event.issue.number }} --json baseRefName,headRefName,headRepository --jq '{base: .baseRefName, head: .headRefName, url: .headRepository.url}')
          echo "pr_data=$pr_data" >> $GITHUB_OUTPUT

      - name: Call external API with remediation data
        env:
          GITHUB_TOKEN_SECRET: ${{ secrets.NCAI_SVRT_TOKEN }}
          API_URL: ${{ secrets.NCAI_SVRT_TRIGGER_URL }}
        run: |
          payload=$(jq -n \
            --arg github_url "${{ fromJson(steps.pr.outputs.pr_data).url }}" \
            --arg base_branch "${{ fromJson(steps.pr.outputs.pr_data).base }}" \
            --arg feature_branch "${{ fromJson(steps.pr.outputs.pr_data).head }}" \
            --arg github_token "$GITHUB_TOKEN_SECRET" \
            --arg issue_number "${{ github.event.issue.number }}" \
            '{
              github_url: $github_url,
              base_branch: $base_branch,
              feature_branch: $feature_branch,
              github_token: $github_token,
              issue_number: $issue_number
            }'
          )

          echo "Payload to be sent:"
          echo "$payload"

          echo "Sending data to $API_URL"
          curl -X POST "$API_URL" \
            -H "Content-Type: application/json" \
            -d "$payload"
