
on:
  issue_comment:
    types: [created]

permissions:
  pull-requests: write
  issues: write
  contents: read

jobs:
  after-checkmarx:
    runs-on: ubuntu-latest
    if: >
      github.event.issue.pull_request &&
      contains(github.event.comment.body, '‚úÖ Checkmarx Scan Completed')
    steps:
      - name: Debug Info
        run: |
          echo "Comment detected on PR #${{ github.event.issue.number }}"
          echo "Comment contains Checkmarx completion message"

      - name: Comment on PR
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ secrets.NCAI_SVRT_TOKEN }}
          issue-number: ${{ github.event.issue.number }}
          body: |
            üõ†Ô∏è **Vulnerability remediation started** for this PR!
            üîó **Follow this URL for detailed analysis**: [View Report](https://your-link-here.com/report/${{ github.event.issue.number }})

      - name: Call external API with remediation data
        env:
          GITHUB_TOKEN_SECRET: ${{ secrets.NCAI-SVRT-TOKEN }}
          API_URL: ${{ secrets.NCAI-SVRT-TRIGGER-URL }}
        run: |
          echo "Fetching PR data from GitHub..."
          PR_JSON=$(curl -s -H "Accept: application/vnd.github+json" \
                        -H "Authorization: Bearer $GITHUB_TOKEN_SECRET" \
                        "https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.issue.number }}")

          GITHUB_URL=$(echo "$PR_JSON" | jq -r '.head.repo.html_url')
          BASE_BRANCH=$(echo "$PR_JSON" | jq -r '.base.ref')
          FEATURE_BRANCH=$(echo "$PR_JSON" | jq -r '.head.ref')
          ISSUE_NUMBER="${{ github.event.issue.number }}"

          PAYLOAD=$(jq -n \
            --arg github_url "$GITHUB_URL" \
            --arg base_branch "$BASE_BRANCH" \
            --arg feature_branch "$FEATURE_BRANCH" \
            --arg github_token "$GITHUB_TOKEN_SECRET" \
            --arg issue_number "$ISSUE_NUMBER" \
            '{
              github_url: $github_url,
              base_branch: $base_branch,
              feature_branch: $feature_branch,
              github_token: $github_token,
              issue_number: $issue_number
            }')

          echo "Payload to be sent:"
          echo "$PAYLOAD"

          echo "Sending data to $API_URL"
          curl -X POST "$API_URL" \
               -H "Content-Type: application/json" \
               -d "$PAYLOAD"
